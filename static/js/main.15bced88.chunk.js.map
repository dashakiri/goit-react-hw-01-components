{"version":3,"sources":["components/friend-list/FriendList.styled.jsx","components/friend-list/FriendLi.styled.jsx","components/friend-list/FriendListItem.jsx","components/friend-list/FriendList.jsx","components/social-profile/Profile.styled.jsx","components/social-profile/Profile.jsx","components/statistics/statistics.styled.jsx","components/statistics/Statistics.jsx","components/transaction-history/TransactionHistory.styled.jsx","components/transaction-history/TransactionHistory.jsx","components/App.jsx","index.js"],"names":["FriendListUl","styled","ul","FriendLi","li","Image","img","Span","span","props","status","FriendListItem","isOnline","avatar","name","src","alt","width","FriendList","friends","map","id","ProfileContainer","div","Avatar","StatsList","UserName","p","UserDescription","StatListLabel","StatListQuantity","UserProfile","tag","location","stats","className","followers","views","likes","prototype","PropTypes","string","shape","exact","number","Section","section","Title","h2","StatList","ListItem","Statistics","title","item","label","percentage","Table","table","TableHead","thead","TableRow","tr","TransactionHistory","transactions","type","amount","currency","App","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15bced88.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FriendListUl = styled.ul`\n  list-style: none;\n  padding: 10px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const FriendLi = styled.li`\n  margin-top: 15px;\n  width: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n`;\n\nexport const Image = styled.img`\n  margin-right: 15px;\n`;\n\nexport const Span = styled.span`\n  margin-right: 15px;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: ${(props) => (props.status ? \"green\" : \"red\")};\n`;\n","import PropTypes from \"prop-types\";\nimport { FriendLi, Image, Span } from \"./FriendLi.styled\";\n\nexport const FriendListItem = ({ isOnline, avatar, name }) => {\n  return (\n    <FriendLi>\n      <Span status={isOnline}></Span>\n      <Image src={avatar} alt={name} width=\"48\" />\n      <p>{name}</p>\n    </FriendLi>\n  );\n};\n\nFriendListItem.propTypes = {\n  isOnline: PropTypes.bool.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport { FriendListUl } from \"./FriendList.styled\";\nimport { FriendListItem } from \"./FriendListItem\";\n\nexport const FriendList = ({ friends }) => {\n  return (\n    <FriendListUl>\n      {friends.map(({ isOnline, avatar, name, id }) => {\n        return (\n          <FriendListItem\n            isOnline={isOnline}\n            avatar={avatar}\n            name={name}\n            key={id}\n          />\n        );\n      })}\n    </FriendListUl>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      isOnline: PropTypes.bool.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from \"@emotion/styled\";\n\nexport const ProfileContainer = styled.div`\n  margin: 10px;\n  padding: 30px;\n  width: 250px;\n  text-align: center;\n  border: 1px solid lightgrey;\n  border-radius: 10px;\n  line-height: 1;\n`;\n\nexport const Avatar = styled.img`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n`;\n\nexport const StatsList = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: center;\n  padding: 15px;\n`;\n\nexport const UserName = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nexport const UserDescription = styled.p`\n  font-size: 16px;\n  color: grey;\n`;\n\nexport const StatListLabel = styled.span`\n  margin-right: 20px;\n  font-size: 18px;\n  color: grey;\n`;\n\nexport const StatListQuantity = styled.span`\n  display: block;\n  margin-top: 5px;\n  margin-right: 20px;\n  font-weight: 500;\n  font-size: 16px;\n`;\n","import PropTypes from \"prop-types\";\nimport {\n  ProfileContainer,\n  Avatar,\n  StatsList,\n  UserName,\n  UserDescription,\n  StatListLabel,\n  StatListQuantity,\n} from \"./Profile.styled\";\n\nexport const UserProfile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <ProfileContainer>\n      <div className=\"description\">\n        <Avatar src={avatar} alt=\"Аватар пользователя\" />\n        <UserName>{name}</UserName>\n        <UserDescription>{tag}</UserDescription>\n        <UserDescription>{location}</UserDescription>\n      </div>\n\n      <StatsList>\n        <li>\n          <StatListLabel>Followers</StatListLabel>\n          <StatListQuantity>{stats.followers}</StatListQuantity>\n        </li>\n        <li>\n          <StatListLabel>Views</StatListLabel>\n          <StatListQuantity>{stats.views}</StatListQuantity>\n        </li>\n        <li>\n          <StatListLabel>Likes</StatListLabel>\n          <StatListQuantity>{stats.likes}</StatListQuantity>\n        </li>\n      </StatsList>\n    </ProfileContainer>\n  );\n};\n\nUserProfile.prototype = {\n  name: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape(\n    PropTypes.exact({\n      followers: PropTypes.number,\n      views: PropTypes.number,\n      likes: PropTypes.number,\n    })\n  ),\n};\n","import styled from \"@emotion/styled\";\n\nexport const Section = styled.section`\n  box-sizing: border-box;\n  margin: 10px;\n  width: 300px;\n  border: 1px solid lightgrey;\n  border-radius: 10px;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n\nexport const StatList = styled.ul`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 60px;\n\n  &:nth-of-type(5n + 1) {\n    background-color: #abdee6;\n  }\n\n  &:nth-of-type(5n + 2) {\n    background-color: #ffffb5;\n  }\n\n  &:nth-of-type(5n + 3) {\n    background-color: #f3b0c3;\n  }\n\n  &:nth-of-type(5n + 4) {\n    background-color: #ffc8a2;\n  }\n\n  &:nth-of-type(5n + 5) {\n    background-color: #cbaacb;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { Section, StatList, ListItem, Title } from \"./statistics.styled\";\n\nexport const Statistics = ({ title, stats }) => {\n  return (\n    <Section>\n      {title && <Title>{title}</Title>}\n\n      <StatList>\n        {stats.map((item) => {\n          return (\n            <ListItem key={item.id}>\n              <span>{item.label}</span>\n              <span>{item.percentage}%</span>\n            </ListItem>\n          );\n        })}\n      </StatList>\n    </Section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n","import styled from \"@emotion/styled\";\n\nexport const Table = styled.table`\n  width: 500px;\n  text-align: center;\n`;\n\nexport const TableHead = styled.thead`\n  background-color: #3d5a80;\n  color: white;\n`;\n\nexport const TableRow = styled.tr`\n  &:nth-child(odd) {\n    background-color: lightgrey;\n  }\n`;\n","import PropTypes from \"prop-types\";\nimport { Table, TableHead, TableRow } from \"./TransactionHistory.styled\";\n\nexport const TransactionHistory = ({ transactions }) => {\n  return (\n    <Table>\n      <TableHead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </TableHead>\n\n      <tbody>\n        {transactions.map((item) => {\n          return (\n            <TableRow key={item.id}>\n              <td>{item.type}</td>\n              <td>{item.amount}</td>\n              <td>{item.currency}</td>\n            </TableRow>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import friends from \"./friend-list/friends.json\";\nimport user from \"./social-profile/user.json\";\nimport stats from \"./statistics/statistical-data.json\";\nimport transactions from \"./transaction-history/transactions.json\";\nimport { FriendList } from \"./friend-list/FriendList\";\nimport { UserProfile } from \"./social-profile/Profile\";\nimport { Statistics } from \"./statistics/Statistics\";\nimport { TransactionHistory } from \"./transaction-history/TransactionHistory\";\n\nexport const App = () => {\n  return (\n    <>\n      <FriendList friends={friends} />\n      <UserProfile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={stats} />\n      <TransactionHistory transactions={transactions} />\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}